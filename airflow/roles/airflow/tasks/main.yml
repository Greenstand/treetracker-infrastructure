---
- name: Add airflow repository
  community.kubernetes.helm_repository:
    name: airflow-stable
    repo_url: https://airflow-helm.github.io/charts

# create in line sealed secret since ansible variables don't propagate all the way to the k8s manifests
- name: Create secret for database connection
  community.kubernetes.k8s:
    state: present
    namespace: airflow
    definition:
      apiVersion: bitnami.com/v1alpha1
      kind: SealedSecret
      metadata:
        name: airflow-database-connection
        namespace: airflow
      spec:
        encryptedData:
          database-password: "{{ database_sealed_secret }}"
        template:
          metadata:
            name: airflow-database-connection
            namespace: airflow

- name: Create secret for airflow admin user
  community.kubernetes.k8s:
    state: present
    namespace: airflow
    definition:
      apiVersion: bitnami.com/v1alpha1
      kind: SealedSecret
      metadata:
        name: airflow-admin-credentials
        namespace: airflow
      spec:
        encryptedData:
          password: "{{ airflow_admin_sealed_password }}"
        template:
          metadata:
            name: airflow-admin-credentials
            namespace: airflow

- set_fact:
    affinity: &affinity
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: doks.digitalocean.com/node-pool
                operator: In
                values:
                  - cloud-services-node-pool

- name: Install airflow chart
  community.kubernetes.helm:
    name: airflow
    chart_ref: airflow-stable/airflow
    chart_version: 8.5.2
    release_namespace: airflow
    create_namespace: true
    release_values:
      postgresql:
        enabled: false
      pgbouncer:
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        affinity: *affinity
      externalDatabase:
        type: postgres
        host: "{{ postgres_db_host }}"
        port: "{{ postgres_db_port }}"
        database: "{{ postgres_db_name }}"
        user: "{{ postgres_db_user }}"
        passwordSecret: "airflow-database-connection"
        passwordSecretKey: "database-password"
        # use this for any extra connection-string settings, e.g. ?sslmode=disable
        properties: ""
      airflow:
        config:
          AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX: "True"
          #AIRFLOW__WEBSERVER__AUTHENTICATE: "True"
          #AIRFLOW__WEBSERVER__AUTH_BACKEND: "airflow.contrib.auth.backends.password_auth"
          # How often (in seconds) to scan the DAGs directory for new files
          AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: "60"
          AIRFLOW__WEBSERVER__BASE_URL: "{{ airflow_base_url }}"
        extraPipPackages:
          - "flask-bcrypt~=0.7.1"
        sync:
          affinity: *affinity
        users:
          - username: admin
            password: ${ADMIN_PASSWORD}
            role: Admin
            email: admin@greenstand.org
            firstName: admin
            lastName: admin
          - username: user
            password: ${USER_PASSWORD}
            role: User
            email: user@greenstand.org
            firstName: user
            lastName: user
          - username: viewer
            password: ${VIEWER_PASSWORD}
            role: Viewer
            email: viewer@greenstand.org
            firstName: viewer
            lastName: viewer
        usersTemplates:
          ADMIN_PASSWORD:
            kind: secret
            name: airflow-admin-credentials
            key: password
          USER_PASSWORD:
            kind: secret
            name: airflow-user-credentials
            key: password
          VIEWER_PASSWORD:
            kind: secret
            name: airflow-viewer-credentials
            key: password
        dbMigrations:
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          affinity: *affinity
      dags:
        gitSync:
          enabled: true
          repo: "https://github.com/Greenstand/treetracker-airflow-dags.git"
          branch: "{{ deployment_branch }}"
          revision: "HEAD"
          # How often (in seconds) the side car will sync files from dag git repo
          syncWait: "60"
      redis:
        master:
          affinity: *affinity
      web:
        resources:
          requests:
            memory: 2Gi
            cpu: "500m"
          limits:
            memory: 4Gi
            cpu: "2000m"
        affinity: *affinity
      scheduler:
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        affinity: *affinity
      workers:
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1000m"
        affinity: *affinity
      flower:
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        affinity: *affinity
    #ingress:
    # enabled: true
    #web:
    #baseUrl: "http://dev.airflow.treetracker.org/"
    #flower:
    #urlPrefix: "/flower"
    #NOTE: ingress is created, but need to use external-dns chart to make LB/DNS

- name: Create UI mapping for control panel
  community.kubernetes.k8s:
    state: present
    namespace: airflow
    src: "{{ role_path }}/files/panel-mapping.yaml"
