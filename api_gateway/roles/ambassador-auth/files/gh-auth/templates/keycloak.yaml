---
apiVersion: v1
kind: ConfigMap
metadata:
  name: realm-template
data:
  realm.json: |
    {
      "realm": "demo",
      "enabled": true,
      "sslRequired": "none",
      "users": [
        {
          "username": "developer",
          "enabled": true,
          "credentials": [
            {
              "type": "password",
              "value": "developer"
            }
          ],
          "realmRoles": [
            "user"
          ],
          "clientRoles": {
            "account": [
              "manage-account"
            ]
          }
        }
      ],
      "roles": {
        "realm": [
          {
            "name": "user",
            "description": "User privileges"
          },
          {
            "name": "admin",
            "description": "Administrator privileges"
          }
        ]
      },
      "defaultRoles": [
        "user"
      ],
      "identityProviders": [
        {
          "alias": "github",
          "internalId": "70edfa6d-dba1-48e6-ba8b-2a79d7baaa47",
          "providerId": "github",
          "enabled": true,
          "updateProfileFirstLoginMode": "on",
          "trustEmail": false,
          "storeToken": true,
          "addReadTokenRoleOnCreate": false,
          "authenticateByDefault": false,
          "linkOnly": false,
          "firstBrokerLoginFlowAlias": "first broker login",
          "config": {
            "hideOnLoginPage": "",
            "clientSecret": "__GITHUB_CLIENT_SECRET__",
            "clientId": "__GITHUB_CLIENT_ID__",
            "disableUserInfo": "",
            "useJwksUrl": "true"
          }
        }
      ],
      "clients": [
        {
          "clientId": "app",
          "enabled": true,
          "clientAuthenticatorType": "client-secret",
          "secret": "{{ .Values.secret }}",
          "publicClient": false,
          "redirectUris": [
            "*"
          ],
          "webOrigins": [
            "*"
          ],
          "defaultClientScopes": [
            "role_list"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access"
          ],
          "protocolMappers": [
            {
              "id": "a4d17aaa-d70e-4858-9b1d-2949e3222615",
              "name": "audience",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.client.audience": "app",
                "id.token.claim": "false",
                "access.token.claim": "true"
              }
            }
          ]
        }
      ]
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      terminationGracePeriodSeconds: 0
      volumes:
        - name: keycloak-config-volume
          emptyDir: {}
        - name: github-app-volume
          configMap:
            name: github-app
        - name: realm-template-volume
          configMap:
            name: realm-template
      initContainers:
        - name: keycloak-realm-generator
          image: alpine:3.8
          command: [
            '/bin/sh',
            '-c',
            "sed \"s/__GITHUB_CLIENT_ID__/$(cat /tmp/github/clientId)/g ; s/__GITHUB_CLIENT_SECRET__/$(cat /tmp/github/clientSecret)/g\" /tmp/keycloak-template/realm.json > /tmp/keycloak/realm.json"
          ]
          volumeMounts:
            - name: github-app-volume
              mountPath: /tmp/github
            - name: realm-template-volume
              mountPath: /tmp/keycloak-template
            - name: keycloak-config-volume
              mountPath: /tmp/keycloak
      containers:
        - name: keycloak
          image: jboss/keycloak:4.8.3.Final
          volumeMounts:
            - name: keycloak-config-volume
              mountPath: /tmp/keycloak
          env:
            - name: KEYCLOAK_USER
              value: "admin"
            - name: KEYCLOAK_PASSWORD
              value: {{ .Values.keycloakPassword }}
            - name: KEYCLOAK_LOGLEVEL
              value: "INFO"
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: KEYCLOAK_IMPORT
              value: "/tmp/keycloak/realm.json"
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          readinessProbe:
            httpGet:
              path: /auth/realms/master
              port: 8080
          resources:
            requests:
              cpu: "100m"
              memory: "512M"
            limits:
              cpu: "1000m"
              memory: "1000M"
